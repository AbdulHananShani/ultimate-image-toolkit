# This block handles insecure HTTP traffic on port 80.
server {
    listen 80;
    server_name pixlyze.com www.pixlyze.com;

    # This rule takes all incoming traffic and permanently redirects it
    # to the secure HTTPS version of the site.
    location / {
        return 301 https://$host$request_uri;
    }
}

# This block handles all secure HTTPS traffic on port 443.
server {
    listen 443 ssl;
    server_name pixlyze.com www.pixlyze.com;

    # --- START: Updated Certificate Paths ---
    # This now points to the Cloudflare Origin Certificate you created.
    ssl_certificate /etc/ssl/certs/pixlyze.com.pem;
    # This now points to the Cloudflare Private Key you created.
    ssl_certificate_key /etc/ssl/certs/pixlyze.com.key;
    # --- END: Updated Certificate Paths ---

    # This passes all requests to your running Python application.
    location / {
        proxy_pass http://web:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # This tells Nginx how to serve your static files (CSS, JS) directly.
    location /static/ { 
        alias /var/www/static/; 
    }
    
    # This tells Nginx how to serve user-uploaded images.
    location /uploads/ { 
        alias /var/www/uploads/; 
    }
}